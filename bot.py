import asyncio
import logging
from datetime import datetime, timedelta
from aiogram import Bot, Dispatcher, types
from aiogram.filters import CommandStart, Command
from aiogram.enums import ParseMode
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove
from db_queries import get_expeditions_by_region, get_unique_expeditions, get_coordinates_for_region

# üîπ –ù–∞—Å—Ç—Ä–æ–π–∫–∏
API_TOKEN = "8307651561:AAGjxStMaM5w6eccOvBpU0TRqCel_4Ys2NE"

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
bot = Bot(token=API_TOKEN)
dp = Dispatcher()
logging.basicConfig(level=logging.INFO)

# üîπ –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –æ–∫–µ–∞–Ω–∞–º–∏
def get_oceans_keyboard():
    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [
                KeyboardButton(text="üåä –ê—Ç–ª–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π"), 
                KeyboardButton(text="üê† –ò–Ω–¥–∏–π—Å–∫–∏–π")
            ],
            [
                KeyboardButton(text="üßä –°–µ–≤–µ—Ä–Ω—ã–π –õ–µ–¥–æ–≤–∏—Ç—ã–π"), 
                KeyboardButton(text="üå¥ –¢–∏—Ö–∏–π")
            ],
            [
                KeyboardButton(text="üìä –í—Å–µ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–∏"),
                KeyboardButton(text="üó∫Ô∏è –í—Å–µ –Ω–∞ –∫–∞—Ä—Ç–µ")
            ],
            [
                KeyboardButton(text="‚ùå –°–∫—Ä—ã—Ç—å –º–µ–Ω—é")
            ]
        ],
        resize_keyboard=True,
        input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –æ–∫–µ–∞–Ω..."
    )
    return keyboard

# üîπ /start - —Å –∫—Ä–∞—Å–∏–≤–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
@dp.message(CommandStart())
async def start(message: types.Message):
    text = (
        "üåä *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Ocean Research System!*\n\n"
        "–Ø –ø–æ–º–æ–≥—É –≤–∞–º –∏–∑—É—á–∏—Ç—å –º–æ—Ä—Å–∫–∏–µ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–∏ –ø–æ —Ä–∞–∑–Ω—ã–º –æ–∫–µ–∞–Ω–∞–º.\n\n"
        "üëá *–í—ã–±–µ—Ä–∏—Ç–µ –æ–∫–µ–∞–Ω –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π:*"
    )
    await message.answer(text, parse_mode=ParseMode.MARKDOWN, reply_markup=get_oceans_keyboard())

# üîπ –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–∏ —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π 
async def show_all_expeditions(message: types.Message):
    expeditions = get_unique_expeditions()

    if not expeditions:
        await message.answer("‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ–± —ç–∫—Å–ø–µ–¥–∏—Ü–∏—è—Ö.")
        return

    # –°–æ–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    regions = set(exp["–†–∞–π–æ–Ω"] for exp in expeditions)
    active_expeditions = [e for e in expeditions if e["–î–∞—Ç–∞_–æ–∫–æ–Ω—á–∞–Ω–∏—è"] is None]
    completed_expeditions = [e for e in expeditions if e["–î–∞—Ç–∞_–æ–∫–æ–Ω—á–∞–Ω–∏—è"] is not None]
    
    # –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
    all_coords = []
    region_stats = {}
    
    for region in regions:
        region_exp = [e for e in expeditions if e["–†–∞–π–æ–Ω"] == region]
        region_coords = get_coordinates_for_region(region)
        
        if region_coords:
            all_coords.extend(region_coords)
            
        region_stats[region] = {
            'count': len(region_exp),
            'active': len([e for e in region_exp if e["–î–∞—Ç–∞_–æ–∫–æ–Ω—á–∞–Ω–∏—è"] is None]),
            'points': len(region_coords) if region_coords else 0
        }

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π
    text = "üìä *–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π*\n\n"
    
    # –û—Å–Ω–æ–≤–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    text += "üìà *–û—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏:*\n"
    text += f"‚Ä¢ üö¢ –í—Å–µ–≥–æ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π: *{len(expeditions)}*\n"
    text += f"‚Ä¢ üü¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö: *{len(active_expeditions)}*\n"
    text += f"‚Ä¢ ‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö: *{len(completed_expeditions)}*\n"
    text += f"‚Ä¢ üåç –ò—Å—Å–ª–µ–¥—É–µ–º—ã—Ö —Ä–µ–≥–∏–æ–Ω–æ–≤: *{len(regions)}*\n"
    text += f"‚Ä¢ üìç –¢–æ—á–µ–∫ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è: *{len(all_coords)}*\n\n"

    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –æ–∫–µ–∞–Ω–∞–º
    text += "üåä *–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –æ–∫–µ–∞–Ω–∞–º:*\n"
    ocean_emojis = {
        "–ê—Ç–ª–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π –æ–∫–µ–∞–Ω": "üåä",
        "–ò–Ω–¥–∏–π—Å–∫–∏–π –æ–∫–µ–∞–Ω": "üê†",
        "–°–µ–≤–µ—Ä–Ω—ã–π –õ–µ–¥–æ–≤–∏—Ç—ã–π –æ–∫–µ–∞–Ω": "üßä",
        "–¢–∏—Ö–∏–π –æ–∫–µ–∞–Ω": "üå¥",
    }

    for region, stats in region_stats.items():
        emoji = ocean_emojis.get(region, "üåä")
        active_percent = (stats['active'] / stats['count']) * 100 if stats['count'] > 0 else 0
        
        text += f"\n{emoji} *{region}:*\n"
        text += f"   üìã –≠–∫—Å–ø–µ–¥–∏—Ü–∏–π: {stats['count']}\n"
        text += f"   üü¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö: {stats['active']} ({active_percent:.1f}%)\n"
        text += f"   üìç –¢–æ—á–µ–∫ –Ω–∞ –∫–∞—Ä—Ç–µ: {stats['points']}\n"

    # –í–º–µ—Å—Ç–æ –æ–±–∑–æ—Ä–Ω–æ–π –∫–∞—Ä—Ç—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—É—é
    if all_coords:
        text += f"\nüó∫Ô∏è *–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –Ω–∞ –∫–∞—Ä—Ç–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É* \"üó∫Ô∏è –í—Å–µ –Ω–∞ –∫–∞—Ä—Ç–µ\""

    # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –¥–µ–π—Å—Ç–≤–∏—è–º–∏
    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [
                KeyboardButton(text="üü¢ –ê–∫—Ç–∏–≤–Ω—ã–µ"),
                KeyboardButton(text="‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ")
            ],
            [
                KeyboardButton(text="üó∫Ô∏è –í—Å–µ –Ω–∞ –∫–∞—Ä—Ç–µ"),  # –ò–°–ü–†–ê–í–õ–ï–ù–û
                KeyboardButton(text="üìÖ –ü–æ –¥–∞—Ç–∞–º")
            ],
            [
                KeyboardButton(text="üåä –ê—Ç–ª–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π"),
                KeyboardButton(text="üê† –ò–Ω–¥–∏–π—Å–∫–∏–π")
            ],
            [
                KeyboardButton(text="üßä –°–µ–≤–µ—Ä–Ω—ã–π –õ–µ–¥–æ–≤–∏—Ç—ã–π"), 
                KeyboardButton(text="üå¥ –¢–∏—Ö–∏–π")
            ],
            [
                KeyboardButton(text="‚ùå –°–∫—Ä—ã—Ç—å –º–µ–Ω—é")
            ]
        ],
        resize_keyboard=True
    )
    
    await message.answer(text, parse_mode=ParseMode.MARKDOWN, reply_markup=keyboard, disable_web_page_preview=False)

# üîπ –ü–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ç–∞–ª—å–Ω—É—é –∫–∞—Ä—Ç—É –≤—Å–µ—Ö —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π
async def show_detailed_map(message: types.Message):
    expeditions = get_unique_expeditions()
    regions = set(exp["–†–∞–π–æ–Ω"] for exp in expeditions)
    
    # –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
    all_coords = []
    region_coords = {}
    
    for region in regions:
        coords = get_coordinates_for_region(region)
        if coords:
            all_coords.extend(coords)
            region_coords[region] = coords
    
    if not all_coords:
        await message.answer("‚ùå –ù–µ—Ç –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–∞—Ä—Ç—ã.")
        return

    await message.answer(
        f"üó∫Ô∏è *–í—Å–µ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–∏ –Ω–∞ –∫–∞—Ä—Ç–µ*\n\n"  # –ò–°–ü–†–ê–í–õ–ï–ù–û –Ω–∞–∑–≤–∞–Ω–∏–µ
        f"–û—Ç–ø—Ä–∞–≤–ª—è—é {len(all_coords)} —Ç–æ—á–µ–∫ —Å {len(expeditions)} —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π...",
        parse_mode=ParseMode.MARKDOWN
    )

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ—á–∫–∏ –ø–æ —Ä–µ–≥–∏–æ–Ω–∞–º
    for region, coords in region_coords.items():
        if coords:
            # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–µ–≥–∏–æ–Ω–µ
            region_expeditions = [e for e in expeditions if e["–†–∞–π–æ–Ω"] == region]
            
            ocean_emojis = {
                "–ê—Ç–ª–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π –æ–∫–µ–∞–Ω": "üåä",
                "–ò–Ω–¥–∏–π—Å–∫–∏–π –æ–∫–µ–∞–Ω": "üê†", 
                "–°–µ–≤–µ—Ä–Ω—ã–π –õ–µ–¥–æ–≤–∏—Ç—ã–π –æ–∫–µ–∞–Ω": "üßä",
                "–¢–∏—Ö–∏–π –æ–∫–µ–∞–Ω": "üå¥"
            }
            emoji = ocean_emojis.get(region, "üåä")
            
            region_info = f"{emoji} *{region}*\n"
            region_info += f"–≠–∫—Å–ø–µ–¥–∏—Ü–∏–π: {len(region_expeditions)}\n"
            region_info += f"–¢–æ—á–µ–∫ –Ω–∞ –∫–∞—Ä—Ç–µ: {len(coords)}\n"
            
            await message.answer(region_info, parse_mode=ParseMode.MARKDOWN)
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã (–æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º 3 —Ç–æ—á–∫–∞–º–∏ –Ω–∞ —Ä–µ–≥–∏–æ–Ω)
            for i, coord in enumerate(coords[:3]):
                lat, lon = coord["–®–∏—Ä–æ—Ç–∞"], coord["–î–æ–ª–≥–æ—Ç–∞"]
                maps_url = f"https://www.google.com/maps?q={lat},{lon}&z=5"
                
                await message.answer_location(latitude=lat, longitude=lon)
                await message.answer(
                    f"üìç –¢–æ—á–∫–∞ {i+1}\n"
                    f"üó∫Ô∏è [–û—Ç–∫—Ä—ã—Ç—å –Ω–∞ –∫–∞—Ä—Ç–µ]({maps_url})",
                    parse_mode=ParseMode.MARKDOWN,
                    disable_web_page_preview=False
                )
                await asyncio.sleep(0.3)

# üîπ –ü–æ–∫–∞–∑–∞—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–µ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–∏
async def show_active_expeditions(message: types.Message):
    expeditions = get_unique_expeditions()
    active_expeditions = [e for e in expeditions if e["–î–∞—Ç–∞_–æ–∫–æ–Ω—á–∞–Ω–∏—è"] is None]
    
    if not active_expeditions:
        await message.answer("üîç *–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π.*", parse_mode=ParseMode.MARKDOWN)
        return

    text = "üü¢ *–ê–∫—Ç–∏–≤–Ω—ã–µ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏:*\n\n"
    
    # –°–ª–æ–≤–∞—Ä—å –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –Ω–∞–∑–≤–∞–Ω–∏–π —Ä–µ–≥–∏–æ–Ω–æ–≤
    region_names = {
        "–ê—Ç–ª–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π –æ–∫–µ–∞–Ω": "–ê—Ç–ª–∞–Ω—Ç–∏—á–µ—Å–∫–æ–º –æ–∫–µ–∞–Ω–µ",
        "–ò–Ω–¥–∏–π—Å–∫–∏–π –æ–∫–µ–∞–Ω": "–ò–Ω–¥–∏–π—Å–∫–æ–º –æ–∫–µ–∞–Ω–µ", 
        "–°–µ–≤–µ—Ä–Ω—ã–π –õ–µ–¥–æ–≤–∏—Ç—ã–π –æ–∫–µ–∞–Ω": "–°–µ–≤–µ—Ä–Ω–æ–º –õ–µ–¥–æ–≤–∏—Ç–æ–º –æ–∫–µ–∞–Ω–µ",
        "–¢–∏—Ö–∏–π –æ–∫–µ–∞–Ω": "–¢–∏—Ö–æ–º –æ–∫–µ–∞–Ω–µ"
    }
    
    for exp in active_expeditions:
        # –†–∞—Å—á–µ—Ç –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–∏
        start_date = exp["–î–∞—Ç–∞_–Ω–∞—á–∞–ª–∞"]
        days_active = (datetime.now().date() - start_date).days
        
        coords_list = get_coordinates_for_region(exp["–†–∞–π–æ–Ω"])
        emoji = "üåä" if "–ê—Ç–ª–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π" in exp["–†–∞–π–æ–Ω"] else "üê†" if "–ò–Ω–¥–∏–π—Å–∫–∏–π" in exp["–†–∞–π–æ–Ω"] else "üßä" if "–°–µ–≤–µ—Ä–Ω—ã–π" in exp["–†–∞–π–æ–Ω"] else "üå¥"
        
        region_display = region_names.get(exp["–†–∞–π–æ–Ω"], exp["–†–∞–π–æ–Ω"])
        
        text += f"{emoji} *{exp['–ù–∞–∑–≤–∞–Ω–∏–µ']}*\n"
        text += f"üìç *–†–µ–≥–∏–æ–Ω:* {region_display}\n"
        text += f"üìÖ *–ù–∞—á–∞–ª–æ:* {exp['–î–∞—Ç–∞_–Ω–∞—á–∞–ª–∞']}\n"
        text += f"‚è±Ô∏è *–î–Ω–µ–π –≤ —Ä–∞–±–æ—Ç–µ:* {days_active}\n"
        
        if coords_list:
            # –°—Å—ã–ª–∫–∞ –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω—é—é —Ç–æ—á–∫—É
            last_coord = coords_list[-1]
            maps_url = f"https://www.google.com/maps?q={last_coord['–®–∏—Ä–æ—Ç–∞']},{last_coord['–î–æ–ª–≥–æ—Ç–∞']}&z=6"
            text += f"üó∫Ô∏è [–ü–æ—Å–ª–µ–¥–Ω–µ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ]({maps_url})\n"
        
        text += "\n"

    await message.answer(text, parse_mode=ParseMode.MARKDOWN, disable_web_page_preview=False)

# üîπ –ü–æ–∫–∞–∑–∞—Ç—å –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–∏
async def show_completed_expeditions(message: types.Message):
    expeditions = get_unique_expeditions()
    completed_expeditions = [e for e in expeditions if e["–î–∞—Ç–∞_–æ–∫–æ–Ω—á–∞–Ω–∏—è"] is not None]
    
    if not completed_expeditions:
        await message.answer("‚úÖ *–ù–µ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π.*", parse_mode=ParseMode.MARKDOWN)
        return

    text = "‚úÖ *–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–∏:*\n\n"
    
    # –°–ª–æ–≤–∞—Ä—å –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –Ω–∞–∑–≤–∞–Ω–∏–π —Ä–µ–≥–∏–æ–Ω–æ–≤
    region_names = {
        "–ê—Ç–ª–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π –æ–∫–µ–∞–Ω": "–ê—Ç–ª–∞–Ω—Ç–∏—á–µ—Å–∫–æ–º –æ–∫–µ–∞–Ω–µ",
        "–ò–Ω–¥–∏–π—Å–∫–∏–π –æ–∫–µ–∞–Ω": "–ò–Ω–¥–∏–π—Å–∫–æ–º –æ–∫–µ–∞–Ω–µ", 
        "–°–µ–≤–µ—Ä–Ω—ã–π –õ–µ–¥–æ–≤–∏—Ç—ã–π –æ–∫–µ–∞–Ω": "–°–µ–≤–µ—Ä–Ω–æ–º –õ–µ–¥–æ–≤–∏—Ç–æ–º –æ–∫–µ–∞–Ω–µ",
        "–¢–∏—Ö–∏–π –æ–∫–µ–∞–Ω": "–¢–∏—Ö–æ–º –æ–∫–µ–∞–Ω–µ"
    }
    
    for exp in completed_expeditions:
        # –†–∞—Å—á–µ—Ç –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–∏
        start_date = exp["–î–∞—Ç–∞_–Ω–∞—á–∞–ª–∞"]
        end_date = exp["–î–∞—Ç–∞_–æ–∫–æ–Ω—á–∞–Ω–∏—è"]
        duration = (end_date - start_date).days
        
        coords_list = get_coordinates_for_region(exp["–†–∞–π–æ–Ω"])
        emoji = "üåä" if "–ê—Ç–ª–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π" in exp["–†–∞–π–æ–Ω"] else "üê†" if "–ò–Ω–¥–∏–π—Å–∫–∏–π" in exp["–†–∞–π–æ–Ω"] else "üßä" if "–°–µ–≤–µ—Ä–Ω—ã–π" in exp["–†–∞–π–æ–Ω"] else "üå¥"
        
        region_display = region_names.get(exp["–†–∞–π–æ–Ω"], exp["–†–∞–π–æ–Ω"])
        
        text += f"{emoji} *{exp['–ù–∞–∑–≤–∞–Ω–∏–µ']}*\n"
        text += f"üìç *–†–µ–≥–∏–æ–Ω:* {region_display}\n"
        text += f"üìÖ *–ü–µ—Ä–∏–æ–¥:* {start_date} ‚Äî {end_date}\n"
        text += f"‚è±Ô∏è *–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:* {duration} –¥–Ω–µ–π\n"
        
        if coords_list:
            text += f"üìç *–¢–æ—á–µ–∫ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è:* {len(coords_list)}\n"
        
        text += "\n"

    await message.answer(text, parse_mode=ParseMode.MARKDOWN)

# üîπ –ü–æ–∫–∞–∑–∞—Ç—å —ç–∫—Å–ø–µ–¥–∏—Ü–∏–∏ –ø–æ –¥–∞—Ç–∞–º
async def show_expeditions_by_date(message: types.Message):
    expeditions = get_unique_expeditions()
    
    if not expeditions:
        await message.answer("‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ–± —ç–∫—Å–ø–µ–¥–∏—Ü–∏—è—Ö.")
        return

    # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –¥–∞—Ç–µ –Ω–∞—á–∞–ª–∞
    sorted_expeditions = sorted(expeditions, key=lambda x: x["–î–∞—Ç–∞_–Ω–∞—á–∞–ª–∞"], reverse=True)
    
    text = "üìÖ *–≠–∫—Å–ø–µ–¥–∏—Ü–∏–∏ –ø–æ –¥–∞—Ç–∞–º (—Å–Ω–∞—á–∞–ª–∞ –Ω–æ–≤—ã–µ):*\n\n"
    
    for exp in sorted_expeditions[:10]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ 10 –ø–æ—Å–ª–µ–¥–Ω–∏—Ö
        status = "üü¢ –ê–∫—Ç–∏–≤–Ω–∞—è" if exp["–î–∞—Ç–∞_–æ–∫–æ–Ω—á–∞–Ω–∏—è"] is None else "‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–∞"
        emoji = "üåä" if "–ê—Ç–ª–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π" in exp["–†–∞–π–æ–Ω"] else "üê†" if "–ò–Ω–¥–∏–π—Å–∫–∏–π" in exp["–†–∞–π–æ–Ω"] else "üßä" if "–°–µ–≤–µ—Ä–Ω—ã–π" in exp["–†–∞–π–æ–Ω"] else "üå¥"
        
        text += f"{emoji} *{exp['–ù–∞–∑–≤–∞–Ω–∏–µ']}*\n"
        text += f"üìÖ {exp['–î–∞—Ç–∞_–Ω–∞—á–∞–ª–∞']} ‚Äî {exp['–î–∞—Ç–∞_–æ–∫–æ–Ω—á–∞–Ω–∏—è'] or '–ø–æ –Ω.–≤.'}\n"
        text += f"üìç {exp['–†–∞–π–æ–Ω']} ‚Ä¢ {status}\n\n"

    if len(sorted_expeditions) > 10:
        text += f"... –∏ –µ—â–µ {len(sorted_expeditions) - 10} —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π"

    await message.answer(text, parse_mode=ParseMode.MARKDOWN)

# üîπ –ü–æ–∫–∞–∑–∞—Ç—å —ç–∫—Å–ø–µ–¥–∏—Ü–∏–∏ –ø–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É –æ–∫–µ–∞–Ω—É —Å —Å—Å—ã–ª–∫–∞–º–∏ –Ω–∞ –∫–∞—Ä—Ç—ã
async def show_expeditions_by_ocean(message: types.Message, ocean_name: str):
    expeditions = get_expeditions_by_region(ocean_name)
    
    if not expeditions:
        await message.answer(f"‚ùå –í {ocean_name} –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ–± —ç–∫—Å–ø–µ–¥–∏—Ü–∏—è—Ö.")
        return

    # –ü–æ–ª—É—á–∞–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –¥–ª—è —ç—Ç–æ–≥–æ –æ–∫–µ–∞–Ω–∞
    coords_list = get_coordinates_for_region(ocean_name)
    
    # –≠–º–æ–¥–∑–∏ –∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è –¥–ª—è –æ–∫–µ–∞–Ω–æ–≤
    ocean_data = {
        "–ê—Ç–ª–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π –æ–∫–µ–∞–Ω": {"emoji": "üåä", "name": "–ê—Ç–ª–∞–Ω—Ç–∏—á–µ—Å–∫–æ–º –æ–∫–µ–∞–Ω–µ"},
        "–ò–Ω–¥–∏–π—Å–∫–∏–π –æ–∫–µ–∞–Ω": {"emoji": "üê†", "name": "–ò–Ω–¥–∏–π—Å–∫–æ–º –æ–∫–µ–∞–Ω–µ"}, 
        "–°–µ–≤–µ—Ä–Ω—ã–π –õ–µ–¥–æ–≤–∏—Ç—ã–π –æ–∫–µ–∞–Ω": {"emoji": "üßä", "name": "–°–µ–≤–µ—Ä–Ω–æ–º –õ–µ–¥–æ–≤–∏—Ç–æ–º –æ–∫–µ–∞–Ω–µ"},
        "–¢–∏—Ö–∏–π –æ–∫–µ–∞–Ω": {"emoji": "üå¥", "name": "–¢–∏—Ö–æ–º –æ–∫–µ–∞–Ω–µ"}
    }
    
    ocean_info = ocean_data.get(ocean_name, {"emoji": "üåä", "name": ocean_name})
    emoji = ocean_info["emoji"]
    display_name = ocean_info["name"]
    
    text = f"{emoji} *–≠–∫—Å–ø–µ–¥–∏—Ü–∏–∏ –≤ {display_name}:*\n\n"
    
    for exp in expeditions:
        text += f"*{exp['–ù–∞–∑–≤–∞–Ω–∏–µ']}*\n"
        text += f"üóì *–ü–µ—Ä–∏–æ–¥:* {exp['–î–∞—Ç–∞_–Ω–∞—á–∞–ª–∞']} ‚Äî {exp['–î–∞—Ç–∞_–æ–∫–æ–Ω—á–∞–Ω–∏—è'] or '–≤ –ø—Ä–æ—Ü–µ—Å—Å–µ'}\n"
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞—Ö
        if coords_list:
            # –°–æ–∑–¥–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞—Ä—Ç—É —Å –ø–µ—Ä–≤—ã–º–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏
            first_coord = coords_list[0]
            lat, lon = first_coord["–®–∏—Ä–æ—Ç–∞"], first_coord["–î–æ–ª–≥–æ—Ç–∞"]
            maps_url = f"https://www.google.com/maps?q={lat},{lon}&z=4"
            
            text += f"üìç *–¢–æ—á–µ–∫ –Ω–∞ –∫–∞—Ä—Ç–µ:* {len(coords_list)}\n"
            text += f"üó∫Ô∏è [–û—Ç–∫—Ä—ã—Ç—å —Ä–µ–≥–∏–æ–Ω –Ω–∞ –∫–∞—Ä—Ç–µ]({maps_url})\n"
        else:
            text += "‚ö†Ô∏è *–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –Ω–µ —É–∫–∞–∑–∞–Ω—ã*\n"
            
        text += "\n"

    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—â—É—é –∫–∞—Ä—Ç—É —Ä–µ–≥–∏–æ–Ω–∞
    if coords_list:
        # –°–æ–∑–¥–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –æ–±—â—É—é –∫–∞—Ä—Ç—É —Å–æ –≤—Å–µ–º–∏ —Ç–æ—á–∫–∞–º–∏
        if len(coords_list) == 1:
            lat, lon = coords_list[0]["–®–∏—Ä–æ—Ç–∞"], coords_list[0]["–î–æ–ª–≥–æ—Ç–∞"]
            all_maps_url = f"https://www.google.com/maps?q={lat},{lon}&z=4"
        else:
            # –î–ª—è –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Ç–æ—á–µ–∫ —Å–æ–∑–¥–∞–µ–º –ø—Ä–∏–º–µ—Ä–Ω—É—é —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω—É—é —Ç–æ—á–∫—É
            avg_lat = sum(coord["–®–∏—Ä–æ—Ç–∞"] for coord in coords_list) / len(coords_list)
            avg_lon = sum(coord["–î–æ–ª–≥–æ—Ç–∞"] for coord in coords_list) / len(coords_list)
            all_maps_url = f"https://www.google.com/maps?q={avg_lat},{avg_lon}&z=3"
        
        text += f"üó∫Ô∏è *–û–±—â–∞—è –∫–∞—Ä—Ç–∞ —Ä–µ–≥–∏–æ–Ω–∞:* [–û—Ç–∫—Ä—ã—Ç—å]({all_maps_url})"

    # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –¥–µ–π—Å—Ç–≤–∏—è–º–∏
    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [
                KeyboardButton(text=f"üó∫Ô∏è {ocean_name} –Ω–∞ –∫–∞—Ä—Ç–µ"),
                KeyboardButton(text="üìä –í—Å–µ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–∏")
            ],
            [
                KeyboardButton(text="üåä –ê—Ç–ª–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π"),
                KeyboardButton(text="üê† –ò–Ω–¥–∏–π—Å–∫–∏–π")
            ],
            [
                KeyboardButton(text="üßä –°–µ–≤–µ—Ä–Ω—ã–π –õ–µ–¥–æ–≤–∏—Ç—ã–π"), 
                KeyboardButton(text="üå¥ –¢–∏—Ö–∏–π")
            ],
            [
                KeyboardButton(text="‚ùå –°–∫—Ä—ã—Ç—å –º–µ–Ω—é")
            ]
        ],
        resize_keyboard=True
    )
    
    await message.answer(text, parse_mode=ParseMode.MARKDOWN, reply_markup=keyboard, disable_web_page_preview=False)

# üîπ –ü–æ–∫–∞–∑–∞—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –æ–∫–µ–∞–Ω –Ω–∞ –∫–∞—Ä—Ç–µ —Å –≤—Å–µ–º–∏ —Ç–æ—á–∫–∞–º–∏
async def show_ocean_on_map(message: types.Message, ocean_name: str):
    expeditions = get_expeditions_by_region(ocean_name)
    coords_list = get_coordinates_for_region(ocean_name)
    
    if not coords_list:
        await message.answer(f"‚ùå –î–ª—è {ocean_name} –Ω–µ—Ç –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ –∫–∞—Ä—Ç–µ.")
        return

    # –ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è –¥–ª—è –æ–∫–µ–∞–Ω–æ–≤
    ocean_data = {
        "–ê—Ç–ª–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π –æ–∫–µ–∞–Ω": {"emoji": "üåä", "name": "–ê—Ç–ª–∞–Ω—Ç–∏—á–µ—Å–∫–æ–º –æ–∫–µ–∞–Ω–µ"},
        "–ò–Ω–¥–∏–π—Å–∫–∏–π –æ–∫–µ–∞–Ω": {"emoji": "üê†", "name": "–ò–Ω–¥–∏–π—Å–∫–æ–º –æ–∫–µ–∞–Ω–µ"}, 
        "–°–µ–≤–µ—Ä–Ω—ã–π –õ–µ–¥–æ–≤–∏—Ç—ã–π –æ–∫–µ–∞–Ω": {"emoji": "üßä", "name": "–°–µ–≤–µ—Ä–Ω–æ–º –õ–µ–¥–æ–≤–∏—Ç–æ–º –æ–∫–µ–∞–Ω–µ"},
        "–¢–∏—Ö–∏–π –æ–∫–µ–∞–Ω": {"emoji": "üå¥", "name": "–¢–∏—Ö–æ–º –æ–∫–µ–∞–Ω–µ"}
    }
    
    ocean_info = ocean_data.get(ocean_name, {"emoji": "üåä", "name": ocean_name})
    emoji = ocean_info["emoji"]
    display_name = ocean_info["name"]
    
    await message.answer(f"{emoji} *–û—Ç–ø—Ä–∞–≤–ª—è—é —Ç–æ—á–∫–∏ –≤ {display_name}:*\n{len(coords_list)} —Ç–æ—á–µ–∫, {len(expeditions)} —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π")

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–∂–¥—É—é —Ç–æ—á–∫—É –Ω–∞ –∫–∞—Ä—Ç–µ
    for i, coord in enumerate(coords_list, 1):
        lat, lon = coord["–®–∏—Ä–æ—Ç–∞"], coord["–î–æ–ª–≥–æ—Ç–∞"]
        maps_url = f"https://www.google.com/maps?q={lat},{lon}&z=6"
        
        # –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ç–æ—á–∫–µ
        point_info = (
            f"{emoji} *–¢–æ—á–∫–∞ {i} –≤ {display_name}*\n"
            f"üìç –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: {lat:.4f}, {lon:.4f}\n"
            f"üó∫Ô∏è [–û—Ç–∫—Ä—ã—Ç—å –Ω–∞ –∫–∞—Ä—Ç–µ]({maps_url})"
        )
        
        await message.answer_location(latitude=lat, longitude=lon)
        await message.answer(point_info, parse_mode=ParseMode.MARKDOWN, disable_web_page_preview=False)
        await asyncio.sleep(0.3)

    # –û–±—â–∞—è –∫–∞—Ä—Ç–∞ —Ä–µ–≥–∏–æ–Ω–∞
    if len(coords_list) > 1:
        avg_lat = sum(coord["–®–∏—Ä–æ—Ç–∞"] for coord in coords_list) / len(coords_list)
        avg_lon = sum(coord["–î–æ–ª–≥–æ—Ç–∞"] for coord in coords_list) / len(coords_list)
        overview_url = f"https://www.google.com/maps?q={avg_lat},{avg_lon}&z=3"
        
        await message.answer(
            f"üó∫Ô∏è *–û–±–∑–æ—Ä–Ω–∞—è –∫–∞—Ä—Ç–∞ –≤—Å–µ–≥–æ —Ä–µ–≥–∏–æ–Ω–∞:* [–û—Ç–∫—Ä—ã—Ç—å]({overview_url})\n"
            f"üìç –û—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç –≤—Å–µ {len(coords_list)} —Ç–æ—á–µ–∫",
            parse_mode=ParseMode.MARKDOWN,
            disable_web_page_preview=False
        )

# üîπ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫ –æ–∫–µ–∞–Ω–æ–≤
@dp.message(lambda message: message.text in [
    "üåä –ê—Ç–ª–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π", "üê† –ò–Ω–¥–∏–π—Å–∫–∏–π", "üßä –°–µ–≤–µ—Ä–Ω—ã–π –õ–µ–¥–æ–≤–∏—Ç—ã–π", "üå¥ –¢–∏—Ö–∏–π",
    "üìä –í—Å–µ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–∏", "üó∫Ô∏è –í—Å–µ –Ω–∞ –∫–∞—Ä—Ç–µ", "‚ùå –°–∫—Ä—ã—Ç—å –º–µ–Ω—é",  
    "üó∫Ô∏è –ê—Ç–ª–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π –æ–∫–µ–∞–Ω –Ω–∞ –∫–∞—Ä—Ç–µ", "üó∫Ô∏è –ò–Ω–¥–∏–π—Å–∫–∏–π –æ–∫–µ–∞–Ω –Ω–∞ –∫–∞—Ä—Ç–µ", 
    "üó∫Ô∏è –°–µ–≤–µ—Ä–Ω—ã–π –õ–µ–¥–æ–≤–∏—Ç—ã–π –æ–∫–µ–∞–Ω –Ω–∞ –∫–∞—Ä—Ç–µ", "üó∫Ô∏è –¢–∏—Ö–∏–π –æ–∫–µ–∞–Ω –Ω–∞ –∫–∞—Ä—Ç–µ",
    "üü¢ –ê–∫—Ç–∏–≤–Ω—ã–µ", "‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ", "üìÖ –ü–æ –¥–∞—Ç–∞–º"  
])
async def handle_ocean_buttons(message: types.Message):
    ocean_map = {
        "üåä –ê—Ç–ª–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π": "–ê—Ç–ª–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π –æ–∫–µ–∞–Ω",
        "üê† –ò–Ω–¥–∏–π—Å–∫–∏–π": "–ò–Ω–¥–∏–π—Å–∫–∏–π –æ–∫–µ–∞–Ω", 
        "üßä –°–µ–≤–µ—Ä–Ω—ã–π –õ–µ–¥–æ–≤–∏—Ç—ã–π": "–°–µ–≤–µ—Ä–Ω—ã–π –õ–µ–¥–æ–≤–∏—Ç—ã–π –æ–∫–µ–∞–Ω",
        "üå¥ –¢–∏—Ö–∏–π": "–¢–∏—Ö–∏–π –æ–∫–µ–∞–Ω",
        "üó∫Ô∏è –ê—Ç–ª–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π –æ–∫–µ–∞–Ω –Ω–∞ –∫–∞—Ä—Ç–µ": "–ê—Ç–ª–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π –æ–∫–µ–∞–Ω",
        "üó∫Ô∏è –ò–Ω–¥–∏–π—Å–∫–∏–π –æ–∫–µ–∞–Ω –Ω–∞ –∫–∞—Ä—Ç–µ": "–ò–Ω–¥–∏–π—Å–∫–∏–π –æ–∫–µ–∞–Ω",
        "üó∫Ô∏è –°–µ–≤–µ—Ä–Ω—ã–π –õ–µ–¥–æ–≤–∏—Ç—ã–π –æ–∫–µ–∞–Ω –Ω–∞ –∫–∞—Ä—Ç–µ": "–°–µ–≤–µ—Ä–Ω—ã–π –õ–µ–¥–æ–≤–∏—Ç—ã–π –æ–∫–µ–∞–Ω", 
        "üó∫Ô∏è –¢–∏—Ö–∏–π –æ–∫–µ–∞–Ω –Ω–∞ –∫–∞—Ä—Ç–µ": "–¢–∏—Ö–∏–π –æ–∫–µ–∞–Ω"
    }
    
    if message.text == "‚ùå –°–∫—Ä—ã—Ç—å –º–µ–Ω—é":
        await message.answer("‚å®Ô∏è –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–∫—Ä—ã—Ç–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å –º–µ–Ω—é.", reply_markup=ReplyKeyboardRemove())
        return
        
    elif message.text == "üìä –í—Å–µ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–∏":
        await show_all_expeditions(message)
        return
        
    elif message.text == "üó∫Ô∏è –í—Å–µ –Ω–∞ –∫–∞—Ä—Ç–µ":  
        await show_detailed_map(message)
        return
        
    elif message.text == "üü¢ –ê–∫—Ç–∏–≤–Ω—ã–µ":
        await show_active_expeditions(message)
        return
        
    elif message.text == "‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ":
        await show_completed_expeditions(message)
        return
        
    elif message.text == "üìÖ –ü–æ –¥–∞—Ç–∞–º":
        await show_expeditions_by_date(message)
        return
        
    elif message.text.startswith("üó∫Ô∏è "):
        ocean_name = ocean_map[message.text]
        await show_ocean_on_map(message, ocean_name)
        return
        
    else:
        ocean_name = ocean_map[message.text]
        await show_expeditions_by_ocean(message, ocean_name)

# üîπ –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –∫–æ–º–∞–Ω–¥ (–¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)
@dp.message(Command("list"))
async def command_list(message: types.Message):
    await show_all_expeditions(message)

@dp.message(Command("map"))
async def command_map(message: types.Message):
    await show_detailed_map(message) 

@dp.message(Command("remove"))
async def command_remove(message: types.Message):
    await message.answer(
        "‚å®Ô∏è –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–∫—Ä—ã—Ç–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å –º–µ–Ω—é.",
        reply_markup=ReplyKeyboardRemove()
    )

# üîπ –ó–∞–ø—É—Å–∫
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())